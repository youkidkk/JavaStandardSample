/* プロパティキー ： メインクラス */
def propKeyMainClass = 'mainClass'

/* プロパティキー ： ベースネーム */
def propKeyBaseName = 'jarBaseName'


/**
 * Jarファイル生成
 */
// ※ アーカイブ名を指定する場合は gradle.properties に jarBaseName を設定する
// ※ バージョンを指定する場合は gradle.properties に version を設定する
jar {
    if (project.hasProperty(propKeyBaseName)) {
        baseName = getProperty(propKeyBaseName)
    }
}


/**
 * ソースJarファイル生成
 */
task sourcesJar(type: Jar, dependsOn: classes) {
    if (project.hasProperty(propKeyBaseName)) {
        baseName = getProperty(propKeyBaseName)
    }
    classifier = 'sources'
    from sourceSets.main.allSource
}

/**
 * JavadocJarファイル生成
 */
task javadocJar(type: Jar, dependsOn: javadoc) {
    if (project.hasProperty(propKeyBaseName)) {
        baseName = getProperty(propKeyBaseName)
    }
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/**
 * ソースJarファイル、JavadocJarファイルの生成を実行
 */
artifacts {
    archives sourcesJar
    archives javadocJar
}


/**
 * runタスクによる実行
 * ※ 使用する場合は gradle.properties に mainClass を設定する
 */
apply plugin: 'application'

run {
    if (project.hasProperty(propKeyMainClass)) {
        mainClassName = getProperty(propKeyMainClass)

        // 実行時引数を使用可能とする
        // 実行サンプル : gradle run -Pargs='a b c'
        if (project.hasProperty('args')) {
            args project.args.split('\\s+')
        }

        // 標準入力を受け取る
        standardInput = System.in
    } else {
        mainClassName = ''
        enabled = false
    }
}
